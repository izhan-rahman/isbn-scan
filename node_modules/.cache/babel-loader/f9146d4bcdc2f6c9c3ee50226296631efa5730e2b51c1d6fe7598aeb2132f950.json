{"ast":null,"code":"var _jsxFileName = \"/Users/izhan/Documents/isbn-scanner/src/components/BarcodeScanner.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport { Html5Qrcode } from \"html5-qrcode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BarcodeScanner({\n  onDetected\n}) {\n  _s();\n  const scannerRef = useRef(null); // We'll store the scanner instance here\n  const isScanning = useRef(false); // Track scanning state\n\n  useEffect(() => {\n    const scanner = new Html5Qrcode(\"reader\");\n    scannerRef.current = scanner;\n    const config = {\n      fps: 10,\n      // Scanning speed (frames per second)\n      qrbox: {\n        width: 250,\n        height: 250\n      },\n      // Scanner box size\n      disableFlip: true // Disable auto flip\n    };\n\n    // Start scanning\n    const startScanner = async () => {\n      try {\n        await scanner.start({\n          facingMode: \"environment\"\n        },\n        // Use rear camera\n        config, decodedText => {\n          // Handle decoded ISBN text\n          const isbn = decodedText.replace(/[^0-9X]/gi, ''); // Clean ISBN\n          if (isbn.startsWith(\"978\") || isbn.startsWith(\"979\")) {\n            scanner.stop(); // Stop scanning once ISBN is detected\n            isScanning.current = false; // Update scanning state\n            onDetected(isbn); // Pass ISBN to the parent component\n          }\n        }, error => {\n          // Handle errors (optional)\n          console.error(\"Scanner error:\", error);\n        });\n        isScanning.current = true; // Update scanning state\n      } catch (err) {\n        console.error(\"Error starting scanner:\", err);\n      }\n    };\n    startScanner();\n\n    // Cleanup the scanner when component unmounts\n    return () => {\n      if (isScanning.current) {\n        try {\n          scanner.stop(); // Only stop if the scanner was started\n        } catch (err) {\n          console.warn(\"Error stopping the scanner:\", err);\n        }\n      }\n    };\n  }, [onDetected]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"reader\",\n      style: {\n        width: \"100%\",\n        borderRadius: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD83D\\uDCF7 Scanning for ISBN...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(BarcodeScanner, \"kvgvb/5plBrbNvGBuW8AIsMLIkY=\");\n_c = BarcodeScanner;\nvar _c;\n$RefreshReg$(_c, \"BarcodeScanner\");","map":{"version":3,"names":["useEffect","useRef","Html5Qrcode","jsxDEV","_jsxDEV","BarcodeScanner","onDetected","_s","scannerRef","isScanning","scanner","current","config","fps","qrbox","width","height","disableFlip","startScanner","start","facingMode","decodedText","isbn","replace","startsWith","stop","error","console","err","warn","children","id","style","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/izhan/Documents/isbn-scanner/src/components/BarcodeScanner.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport { Html5Qrcode } from \"html5-qrcode\";\r\n\r\nexport default function BarcodeScanner({ onDetected }) {\r\n  const scannerRef = useRef(null); // We'll store the scanner instance here\r\n  const isScanning = useRef(false); // Track scanning state\r\n\r\n  useEffect(() => {\r\n    const scanner = new Html5Qrcode(\"reader\");\r\n    scannerRef.current = scanner;\r\n\r\n    const config = {\r\n      fps: 10, // Scanning speed (frames per second)\r\n      qrbox: { width: 250, height: 250 }, // Scanner box size\r\n      disableFlip: true, // Disable auto flip\r\n    };\r\n\r\n    // Start scanning\r\n    const startScanner = async () => {\r\n      try {\r\n        await scanner.start(\r\n          { facingMode: \"environment\" }, // Use rear camera\r\n          config,\r\n          (decodedText) => {\r\n            // Handle decoded ISBN text\r\n            const isbn = decodedText.replace(/[^0-9X]/gi, ''); // Clean ISBN\r\n            if (isbn.startsWith(\"978\") || isbn.startsWith(\"979\")) {\r\n              scanner.stop(); // Stop scanning once ISBN is detected\r\n              isScanning.current = false; // Update scanning state\r\n              onDetected(isbn); // Pass ISBN to the parent component\r\n            }\r\n          },\r\n          (error) => {\r\n            // Handle errors (optional)\r\n            console.error(\"Scanner error:\", error);\r\n          }\r\n        );\r\n        isScanning.current = true; // Update scanning state\r\n      } catch (err) {\r\n        console.error(\"Error starting scanner:\", err);\r\n      }\r\n    };\r\n\r\n    startScanner();\r\n\r\n    // Cleanup the scanner when component unmounts\r\n    return () => {\r\n      if (isScanning.current) {\r\n        try {\r\n          scanner.stop(); // Only stop if the scanner was started\r\n        } catch (err) {\r\n          console.warn(\"Error stopping the scanner:\", err);\r\n        }\r\n      }\r\n    };\r\n  }, [onDetected]);\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"reader\" style={{ width: \"100%\", borderRadius: \"10px\" }} />\r\n      <p>ðŸ“· Scanning for ISBN...</p>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,WAAW,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAe,SAASC,cAAcA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACrD,MAAMC,UAAU,GAAGP,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;EACjC,MAAMQ,UAAU,GAAGR,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;;EAElCD,SAAS,CAAC,MAAM;IACd,MAAMU,OAAO,GAAG,IAAIR,WAAW,CAAC,QAAQ,CAAC;IACzCM,UAAU,CAACG,OAAO,GAAGD,OAAO;IAE5B,MAAME,MAAM,GAAG;MACbC,GAAG,EAAE,EAAE;MAAE;MACTC,KAAK,EAAE;QAAEC,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAI,CAAC;MAAE;MACpCC,WAAW,EAAE,IAAI,CAAE;IACrB,CAAC;;IAED;IACA,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMR,OAAO,CAACS,KAAK,CACjB;UAAEC,UAAU,EAAE;QAAc,CAAC;QAAE;QAC/BR,MAAM,EACLS,WAAW,IAAK;UACf;UACA,MAAMC,IAAI,GAAGD,WAAW,CAACE,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,CAAC;UACnD,IAAID,IAAI,CAACE,UAAU,CAAC,KAAK,CAAC,IAAIF,IAAI,CAACE,UAAU,CAAC,KAAK,CAAC,EAAE;YACpDd,OAAO,CAACe,IAAI,CAAC,CAAC,CAAC,CAAC;YAChBhB,UAAU,CAACE,OAAO,GAAG,KAAK,CAAC,CAAC;YAC5BL,UAAU,CAACgB,IAAI,CAAC,CAAC,CAAC;UACpB;QACF,CAAC,EACAI,KAAK,IAAK;UACT;UACAC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;QACxC,CACF,CAAC;QACDjB,UAAU,CAACE,OAAO,GAAG,IAAI,CAAC,CAAC;MAC7B,CAAC,CAAC,OAAOiB,GAAG,EAAE;QACZD,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEE,GAAG,CAAC;MAC/C;IACF,CAAC;IAEDV,YAAY,CAAC,CAAC;;IAEd;IACA,OAAO,MAAM;MACX,IAAIT,UAAU,CAACE,OAAO,EAAE;QACtB,IAAI;UACFD,OAAO,CAACe,IAAI,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC,OAAOG,GAAG,EAAE;UACZD,OAAO,CAACE,IAAI,CAAC,6BAA6B,EAAED,GAAG,CAAC;QAClD;MACF;IACF,CAAC;EACH,CAAC,EAAE,CAACtB,UAAU,CAAC,CAAC;EAEhB,oBACEF,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAK2B,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEjB,KAAK,EAAE,MAAM;QAAEkB,YAAY,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnEjC,OAAA;MAAA0B,QAAA,EAAG;IAAuB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV;AAAC9B,EAAA,CA5DuBF,cAAc;AAAAiC,EAAA,GAAdjC,cAAc;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}