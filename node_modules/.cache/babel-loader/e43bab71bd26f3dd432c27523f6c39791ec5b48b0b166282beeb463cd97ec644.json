{"ast":null,"code":"var _jsxFileName = \"/Users/izhan/Documents/isbn-scanner/src/components/BarcodeScanner.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nimport { BrowserMultiFormatReader } from '@zxing/browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BarcodeScanner({\n  onDetected\n}) {\n  _s();\n  const videoRef = useRef(null);\n  const codeReaderRef = useRef(null);\n  useEffect(() => {\n    const codeReader = new BrowserMultiFormatReader();\n    codeReaderRef.current = codeReader;\n    const startScanner = async () => {\n      try {\n        await codeReader.decodeFromVideoDevice(null, videoRef.current, (result, err) => {\n          if (result) {\n            const isbn = result.getText().replace(/[^0-9X]/gi, '');\n            if (isbn.startsWith('978') || isbn.startsWith('979')) {\n              onDetected(isbn);\n              try {\n                if (codeReader.reset) {\n                  codeReader.reset();\n                } else if (codeReader.resetDecoder) {\n                  codeReader.resetDecoder();\n                }\n              } catch (resetError) {\n                console.warn(\"Reset failed:\", resetError);\n              }\n            }\n          }\n        });\n      } catch (error) {\n        console.error('Camera error:', error);\n      }\n    };\n    startScanner();\n    return () => {\n      try {\n        var _codeReaderRef$curren, _codeReaderRef$curren2;\n        if ((_codeReaderRef$curren = codeReaderRef.current) !== null && _codeReaderRef$curren !== void 0 && _codeReaderRef$curren.reset) {\n          codeReaderRef.current.reset();\n        } else if ((_codeReaderRef$curren2 = codeReaderRef.current) !== null && _codeReaderRef$curren2 !== void 0 && _codeReaderRef$curren2.resetDecoder) {\n          codeReaderRef.current.resetDecoder();\n        }\n      } catch (err) {\n        console.warn(\"Error during cleanup:\", err);\n      }\n    };\n  }, [onDetected]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      width: \"100%\",\n      style: {\n        borderRadius: \"10px\"\n      },\n      autoPlay: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD83D\\uDCF7 Point your camera at an ISBN barcode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(BarcodeScanner, \"qno5nXjCF0MVyv1YWocLXYPB5Co=\");\n_c = BarcodeScanner;\nvar _c;\n$RefreshReg$(_c, \"BarcodeScanner\");","map":{"version":3,"names":["useEffect","useRef","BrowserMultiFormatReader","jsxDEV","_jsxDEV","BarcodeScanner","onDetected","_s","videoRef","codeReaderRef","codeReader","current","startScanner","decodeFromVideoDevice","result","err","isbn","getText","replace","startsWith","reset","resetDecoder","resetError","console","warn","error","_codeReaderRef$curren","_codeReaderRef$curren2","children","ref","width","style","borderRadius","autoPlay","muted","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/izhan/Documents/isbn-scanner/src/components/BarcodeScanner.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\r\nimport { BrowserMultiFormatReader } from '@zxing/browser';\r\n\r\nexport default function BarcodeScanner({ onDetected }) {\r\n  const videoRef = useRef(null);\r\n  const codeReaderRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const codeReader = new BrowserMultiFormatReader();\r\n    codeReaderRef.current = codeReader;\r\n\r\n    const startScanner = async () => {\r\n      try {\r\n        await codeReader.decodeFromVideoDevice(null, videoRef.current, (result, err) => {\r\n          if (result) {\r\n            const isbn = result.getText().replace(/[^0-9X]/gi, '');\r\n            if (isbn.startsWith('978') || isbn.startsWith('979')) {\r\n              onDetected(isbn);\r\n              try {\r\n                if (codeReader.reset) {\r\n                  codeReader.reset();\r\n                } else if (codeReader.resetDecoder) {\r\n                  codeReader.resetDecoder();\r\n                }\r\n              } catch (resetError) {\r\n                console.warn(\"Reset failed:\", resetError);\r\n              }\r\n            }\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('Camera error:', error);\r\n      }\r\n    };\r\n\r\n    startScanner();\r\n\r\n    return () => {\r\n      try {\r\n        if (codeReaderRef.current?.reset) {\r\n          codeReaderRef.current.reset();\r\n        } else if (codeReaderRef.current?.resetDecoder) {\r\n          codeReaderRef.current.resetDecoder();\r\n        }\r\n      } catch (err) {\r\n        console.warn(\"Error during cleanup:\", err);\r\n      }\r\n    };\r\n  }, [onDetected]);\r\n\r\n  return (\r\n    <div>\r\n      <video ref={videoRef} width=\"100%\" style={{ borderRadius: \"10px\" }} autoPlay muted />\r\n      <p>ðŸ“· Point your camera at an ISBN barcode</p>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,wBAAwB,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,eAAe,SAASC,cAAcA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACrD,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMQ,aAAa,GAAGR,MAAM,CAAC,IAAI,CAAC;EAElCD,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAG,IAAIR,wBAAwB,CAAC,CAAC;IACjDO,aAAa,CAACE,OAAO,GAAGD,UAAU;IAElC,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMF,UAAU,CAACG,qBAAqB,CAAC,IAAI,EAAEL,QAAQ,CAACG,OAAO,EAAE,CAACG,MAAM,EAAEC,GAAG,KAAK;UAC9E,IAAID,MAAM,EAAE;YACV,MAAME,IAAI,GAAGF,MAAM,CAACG,OAAO,CAAC,CAAC,CAACC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;YACtD,IAAIF,IAAI,CAACG,UAAU,CAAC,KAAK,CAAC,IAAIH,IAAI,CAACG,UAAU,CAAC,KAAK,CAAC,EAAE;cACpDb,UAAU,CAACU,IAAI,CAAC;cAChB,IAAI;gBACF,IAAIN,UAAU,CAACU,KAAK,EAAE;kBACpBV,UAAU,CAACU,KAAK,CAAC,CAAC;gBACpB,CAAC,MAAM,IAAIV,UAAU,CAACW,YAAY,EAAE;kBAClCX,UAAU,CAACW,YAAY,CAAC,CAAC;gBAC3B;cACF,CAAC,CAAC,OAAOC,UAAU,EAAE;gBACnBC,OAAO,CAACC,IAAI,CAAC,eAAe,EAAEF,UAAU,CAAC;cAC3C;YACF;UACF;QACF,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACvC;IACF,CAAC;IAEDb,YAAY,CAAC,CAAC;IAEd,OAAO,MAAM;MACX,IAAI;QAAA,IAAAc,qBAAA,EAAAC,sBAAA;QACF,KAAAD,qBAAA,GAAIjB,aAAa,CAACE,OAAO,cAAAe,qBAAA,eAArBA,qBAAA,CAAuBN,KAAK,EAAE;UAChCX,aAAa,CAACE,OAAO,CAACS,KAAK,CAAC,CAAC;QAC/B,CAAC,MAAM,KAAAO,sBAAA,GAAIlB,aAAa,CAACE,OAAO,cAAAgB,sBAAA,eAArBA,sBAAA,CAAuBN,YAAY,EAAE;UAC9CZ,aAAa,CAACE,OAAO,CAACU,YAAY,CAAC,CAAC;QACtC;MACF,CAAC,CAAC,OAAON,GAAG,EAAE;QACZQ,OAAO,CAACC,IAAI,CAAC,uBAAuB,EAAET,GAAG,CAAC;MAC5C;IACF,CAAC;EACH,CAAC,EAAE,CAACT,UAAU,CAAC,CAAC;EAEhB,oBACEF,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAOyB,GAAG,EAAErB,QAAS;MAACsB,KAAK,EAAC,MAAM;MAACC,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAO,CAAE;MAACC,QAAQ;MAACC,KAAK;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrFlC,OAAA;MAAAwB,QAAA,EAAG;IAAuC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV;AAAC/B,EAAA,CArDuBF,cAAc;AAAAkC,EAAA,GAAdlC,cAAc;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}